#!/usr/bin/env python
"""A script for managing stacks using Cloudformation templates

Usage:
  amideploying ensure <name> --url <url> <parameters>...
  amideploying cancel-update <name>
  amideploying status <name>

Commands:
  ensure            Updates the stack with the given name to use the specified template, hosted on S3. This creates the
                    stack if necessary.
  cancel-update     Cancels an in-progress update on the specified stack.
  status            Returns the current status of the specified stack.

Options:
  -h --help         Show this screen.
  -v --version      Show version.
"""

from docopt import docopt

from amideploying.managers import DeployManager
from amideploying import __version__


if __name__ == '__main__':
    args = docopt(__doc__, version='Am I Deploying? {0}'.format(__version__))

    manager = DeployManager(region="us-east-1")

    if args['ensure']:
        parameters = args.get("<parameters>")
        assert parameters is not None

        template_parameters = []

        for parameter in parameters:
            (k, v) = parameter.split(":")
            template_parameters.append((k, v))

        manager.ensure(args.get("<name>"), args.get("<url>"), template_parameters)
    if args['cancel-update']:
        manager.cancel_update(args.get("<name>"))
    if args['status']:
        manager.status(args.get("<name>"))